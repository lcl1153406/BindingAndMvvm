<Window x:Class="LoongEgg.BindingAndMVVM.Calculator"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LoongEgg.BindingAndMVVM"
        mc:Ignorable="d"
        Background="{x:Null}"
        Title="Calculator" Height="450" Width="800">

    <!-- wechat: InnerGeeker
         wechat/bilibili: 香辣恐龙蛋
    -->

    <!--  Style Definitions  -->
    <Window.Resources>
        <ResourceDictionary>
            <!--  Base style of TextBox  -->
            <Style x:Key="TextStyle.Base" 
                   TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="60"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="SkyBlue"/>
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <!--  Set the default style of TextBox  -->
            <Style TargetType="{x:Type TextBox}" 
                   BasedOn="{StaticResource TextStyle.Base}">
                <Setter Property="Width" Value="120"/>
            </Style>

            <!--  Style of Answer TextBox  -->
            <Style x:Key="TextStyle.ReadOnly" 
                   TargetType="{x:Type TextBox}" 
                   BasedOn="{StaticResource TextStyle.Base}" >
                <Setter Property="Background" Value="White"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
            </Style>

            <!--  Style of Operator Button  -->
            <!--  NOTE:
                        ENJOY THE MAGIC OF BINDING IN STYLE
            -->
            <Style  x:Key="ButtonStyle.Operator"
                    TargetType="{x:Type Button}" >
                <Setter Property="Background" Value="White"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Width" Value="60"/>
                <Setter Property="FontSize" Value="32"/>
                <Setter Property="Command" 
                        Value="{Binding CalculateCommand}"/>
                <Setter Property="CommandParameter" 
                        Value="{Binding 
                            Content,
                            RelativeSource={RelativeSource Mode=Self}}"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <!--  Set DataContext = A NEW_VIEW_MODEL() -->
    <Window.DataContext>
        <local:CalculatorViewModel/>
    </Window.DataContext>

    <!-- wechat: InnerGeeker
         wechat/bilibili: 香辣恐龙蛋
    -->

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--  Left Operand  -->
        <TextBox 
            Grid.Column="0" 
            Text="{Binding Left}"/>

        <!--  Operators  -->
        <UniformGrid 
            Grid.Column="1"
            Rows="5">

            <!--  NOTE:
                        [Command] & [CommandParameter] is set binding path
                        in the ButtonStyle.Operator
            -->
            <Button Content="+" Style="{StaticResource ButtonStyle.Operator}"/>
            <Button Content="-" Style="{StaticResource ButtonStyle.Operator}"/>
            <Button Content="*" Style="{StaticResource ButtonStyle.Operator}"/>
            <Button Content="/" Style="{StaticResource ButtonStyle.Operator}"/>

            <!--  NOTE:
                        In Debug:   this button will raise a break
                        In Release: this button will throw a NotImplementedException
                        Enjoy the magic of the code behide
            -->
            <Button Content="^" Style="{StaticResource ButtonStyle.Operator}"/>

        </UniformGrid>

        <!--  Right Operand  -->
        <TextBox 
            Grid.Column="2"
            Text="{Binding Right}" />

        <!--  [=]  -->
        <Label  
            Grid.Column="3"
            Content="=" 
            Foreground="White"
            FontSize="32" 
            HorizontalContentAlignment="Center"
            VerticalAlignment="Center"/>

        <!--  Answer  -->
        <TextBox 
            Grid.Column="4"
            Text="{Binding Answer, Mode=OneWay}" 
            Style="{StaticResource TextStyle.ReadOnly}"  />

    </Grid>
</Window>